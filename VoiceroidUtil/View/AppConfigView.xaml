<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:tk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:ru="http://schemas.ruche-home.net/xaml/windows/mvvm"
    xmlns:aviutl="http://schemas.ruche-home.net/xaml/aviutl"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:local="clr-namespace:VoiceroidUtil"
    xmlns:v="clr-namespace:VoiceroidUtil.View"
    xmlns:vm="clr-namespace:VoiceroidUtil.ViewModel"
    xmlns:trt="clr-namespace:VoiceroidUtil.TRToys"
    x:Class="VoiceroidUtil.View.AppConfigView"
    mc:Ignorable="d"
    d:DesignWidth="400"
    d:DataContext="{d:DesignInstance vm:AppConfigViewModel, IsDesignTimeCreatable=True}"
    UseLayoutRounding="True"
    TextOptions.TextFormattingMode="Display"
    TextOptions.TextRenderingMode="ClearType">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="/VoiceroidUtil;component/resources/CommonBrushes.xaml" />
                <ResourceDictionary
                    Source="/VoiceroidUtil;component/resources/CommonStyles.xaml" />
                <ResourceDictionary
                    Source="/VoiceroidUtil;component/resources/TabStyles.xaml" />
                <ResourceDictionary
                    Source="/VoiceroidUtil;component/resources/Converters.xaml" />
                <ResourceDictionary>
                    <ObjectDataProvider
                        x:Key="fileNameFormats"
                        MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="local:FileNameFormat" />
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                    <ObjectDataProvider
                        x:Key="textAlignments"
                        MethodName="GetValues"
                        ObjectType="{x:Type sys:Enum}">
                        <ObjectDataProvider.MethodParameters>
                            <x:Type TypeName="aviutl:TextAlignment" />
                        </ObjectDataProvider.MethodParameters>
                    </ObjectDataProvider>
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <TabControl
        SelectedIndex="{Binding SelectedTabIndex.Value}"
        Style="{StaticResource modernTabControl}">
        <TabItem
            Style="{StaticResource modernTabItem}"
            Background="{StaticResource modernTabItemBackgroundMaki}">
            <TabItem.Header>
                <StackPanel Orientation="Horizontal">
                    <Image Source="/VoiceroidUtil;component/resources/icon/config.png" />
                    <AccessText Text="一般(_G)" Margin="2,0,0,0" />
                </StackPanel>
            </TabItem.Header>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical" Margin="6">
                    <CheckBox
                        Content="起動時にアプリの更新をチェック(_U)"
                        IsChecked="{Binding Config.Value.IsUpdateCheckingOnStartup}" />
                    <CheckBox
                        Content="ウィンドウを常に最前面に表示(_W)"
                        IsChecked="{Binding Config.Value.IsTopmost}"
                        Margin="0,4,0,0" />
                    <CheckBox
                        Content="タブ文字の入力を許可(_T)"
                        IsChecked="{Binding Config.Value.IsTabAccepted}"
                        Margin="0,4,0,0" />
                    <Label Content="VOICEROID表示切替:" Margin="0,4,0,0" />
                    <Border Style="{StaticResource solidBorder}" Margin="0,1,0,0">
                        <ItemsControl
                            ItemsSource="{Binding Config.Value.VoiceroidVisibilities}"
                            Margin="6,4">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox
                                        Content="{Binding VoiceroidName}"
                                        IsChecked="{Binding IsVisible}"
                                        Margin="0,2,8,2" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Border>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
        <TabItem
            Style="{StaticResource modernTabItem}"
            Background="{StaticResource modernTabItemBackgroundMaki}">
            <TabItem.Header>
                <StackPanel Orientation="Horizontal">
                    <Image Source="/VoiceroidUtil;component/resources/icon/file_sound.png" />
                    <AccessText Text="音声保存(_A)" Margin="2,0,0,0" />
                </StackPanel>
            </TabItem.Header>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel Orientation="Vertical" Margin="6">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Button
                            Content="保存先(_D)..."
                            Command="{Binding SelectSaveDirectoryCommand}"
                            Grid.Column="0" />
                        <tk:AutoSelectTextBox
                            Text="{Binding Config.Value.SaveDirectoryPath}"
                            IsReadOnly="True"
                            IsReadOnlyCaretVisible="True"
                            Background="{DynamicResource
                                ResourceKey={x:Static SystemColors.ControlBrushKey}}"
                            Margin="2,0,0,0"
                            VerticalContentAlignment="Center"
                            AutoSelectBehavior="{x:Static tk:AutoSelectBehavior.OnFocus}"
                            Grid.Column="1">
                            <i:Interaction.Behaviors>
                                <ru:DragDropCommandBehavior
                                    PreviewDragOverCommand="{Binding
                                        Path=DragOverSaveDirectoryCommand}"
                                    DropCommand="{Binding DropSaveDirectoryCommand}" />
                            </i:Interaction.Behaviors>
                        </tk:AutoSelectTextBox>
                        <Button
                            Command="{Binding OpenSaveDirectoryCommand}"
                            ToolTip="保存先フォルダーを開く (F9)"
                            Margin="1,0,0,0"
                            Padding="3,0"
                            Grid.Column="2">
                            <Image Source="/VoiceroidUtil;component/resources/icon/open.png" />
                        </Button>
                    </Grid>
                    <StackPanel
                        Orientation="Vertical"
                        IsEnabled="{Binding CanModify.Value, Mode=OneWay}"
                        Margin="0,4,0,0">
                        <DockPanel>
                            <Label
                                Content="ファイル命名(_F):"
                                Target="{Binding ElementName=Setting_FileName}"
                                DockPanel.Dock="Left" />
                            <ComboBox
                                x:Name="Setting_FileName"
                                ItemsSource="{Binding
                                    Source={StaticResource fileNameFormats}}"
                                SelectedItem="{Binding Config.Value.FileNameFormat}"
                                Margin="4,0,0,0">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock
                                            Text="{Binding
                                                Converter={StaticResource
                                                    ResourceKey=enumDisplayConverter}}" />
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DockPanel>
                        <CheckBox
                            Content="テキストファイルを必ず作成(_T)"
                            IsChecked="{Binding Config.Value.IsTextFileForceMaking}"
                            Margin="0,4,0,0" />
                        <CheckBox
                            Content="文字コード UTF-8 で作成(_U)"
                            IsChecked="{Binding Config.Value.IsTextFileUtf8}"
                            IsEnabled="{Binding
                                Path=Config.Value.IsTextFileForceMaking,
                                Mode=OneWay}"
                            Margin="20,4,0,0" />
                        <CheckBox
                            Content="AviUtl拡張編集ファイル(.exo)を作成(_E)"
                            IsChecked="{Binding Config.Value.IsExoFileMaking}"
                            Margin="0,4,0,0" />
                        <CheckBox
                            Content="保存成功時に入力文をクリア(_C)"
                            IsChecked="{Binding Config.Value.IsTextClearing}"
                            Margin="0,4,0,0" />
                        <CheckBox
                            Content="保存ファイル名設定操作を厳密に行う(_A)"
                            IsChecked="{Binding Config.Value.IsUIAutomationEnabledOnSave}"
                            Margin="0,4,0,0" />
                        <Label
                            Content="※チェックを外す方が高速ですが、一部環境では保存失敗します。"
                            FontSize="11"
                            Margin="20,0,0,0" />

                        <!-- TRT's拡張：追加設定 -->
                        <CheckBox
                            Content="拡張機能：以下の文字列により字幕の改行・ファイル分割を行う"
                            IsChecked="{Binding PreviewStyle.Value.IsTextSplitting}"
                            Margin="0,4,0,0" />

                        <Grid Margin="20,4,0,0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="4"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <Label 
                                Grid.Row="0" Grid.Column="0"
                                Content="改行用文字列："/>
                            <TextBox
                                Grid.Row="0" Grid.Column="2"
                                Text="{Binding PreviewStyle.Value.LineFeedString}"
                                IsEnabled="False"
                                Width="20"/>
                                <!--IsEnabled="{Binding 
                                    Path=PreviewStyle.Value.IsTextSplitting, 
                                    Mode=OneWay}"-->
                            <Label 
                                Grid.Row="2" Grid.Column="0"
                                Content="ファイル分割用文字列："/>
                            <TextBox
                                Grid.Row="2" Grid.Column="2"
                                Text="{Binding PreviewStyle.Value.FileSplitString}"
                                IsEnabled="False"
                                Width="20"/>
                                <!--IsEnabled="{Binding 
                                    Path=PreviewStyle.Value.IsTextSplitting, 
                                    Mode=OneWay}"-->
                        </Grid>
                        <CheckBox
                            Content="入力テキストの行を右端で折り返す"
                            IsChecked="{Binding PreviewStyle.Value.IsTextWrapping}"
                            IsEnabled="{Binding
                                Path=PreviewStyle.Value.IsTextSplitting,
                                Mode=OneWay}"
                            Margin="20,4,0,0"/>
                        <CheckBox
                            Content="分割されたテキストファイルを作成"
                            IsChecked="{Binding PreviewStyle.Value.IsSplitTextSaving}"
                            IsEnabled="{Binding 
                                Path=PreviewStyle.Value.IsTextSplitting,
                                Mode=OneWay}"
                            Margin="20,4,0,0"/>
                        <Label
                            Content="※「テキストファイルを必ず作成」へのチェックが必要"
                            FontSize="11"
                            Margin="40,0,0,0" />
                        <Label
                            Content="　保存先に「(保存名)__0.txt」のように作成されます。"
                            FontSize="11"
                            Margin="40,0,0,0" />
                        <CheckBox
                            Content="再編集用テキストファイルを作成"
                            IsChecked="{Binding PreviewStyle.Value.IsRawTextSaving}"
                            IsEnabled="{Binding 
                                Path=PreviewStyle.Value.IsTextSplitting,
                                Mode=OneWay}"
                            Margin="20,4,0,0"/>
                        <Label
                            Content="※保存先に「改行分割__再編集用」ディレクトリが生成されます。"
                            FontSize="11"
                            Margin="40,0,0,0" />
                        <StackPanel>
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger
                                            Binding="{Binding PreviewStyle.Value.IsTextSplitting}"
                                            Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <!-- プレビューウィンドウのスタイル設定 -->
                            <Border
                                BorderBrush="Silver"
                                BorderThickness="1"
                                Margin="20,10,5,0"
                                Padding="8">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="8"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="8"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="8"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>

                                    <Label
                                        Grid.Row="0" Grid.Column="0"
                                        Content="AviUtl横幅："
                                        Target="{Binding ElementName=AviUtl_WindowWidth}"/>
                                    <tk:IntegerUpDown
                                        Grid.Row="0" Grid.Column="2"
                                        HorizontalAlignment="Left"
                                        x:Name="AviUtl_WindowWidth"
                                        Value="{Binding
                                            Path=PreviewStyle.Value.AviUtlWindowWidth,
                                            UpdateSourceTrigger=PropertyChanged}"
                                        Minimum="1"
                                        Maximum="9999"
                                        Width="56" />
                                    <Label
                                        Grid.Row="2" Grid.Column="0"
                                        Content="プレビュー横幅："
                                        Target="{Binding ElementName=Preview_WindowWidth}"/>
                                    <tk:IntegerUpDown
                                        Grid.Row="2" Grid.Column="2"
                                        HorizontalAlignment="Left"
                                        x:Name="Preview_WindowWidth"
                                        Value="{Binding
                                            Path=PreviewStyle.Value.PreviewWindowWidth,
                                            UpdateSourceTrigger=PropertyChanged}"
                                        Minimum="1"
                                        Maximum="9999"
                                        Width="56" />
                                    <Label
                                        Grid.Row="4" Grid.Column="0"
                                        Content="AviUtl余白幅："/>
                                    <StackPanel
                                        Grid.Row="4" Grid.Column="2"
                                        Orientation="Horizontal">
                                        <Label
                                            Content="左:"
                                            Target="{Binding ElementName=Text_MarginLeft}"/>
                                        <tk:IntegerUpDown
                                            x:Name="Text_MarginLeft"
                                            Value="{Binding
                                                Path=PreviewStyle.Value.AviUtlLeftMargin,
                                                UpdateSourceTrigger=PropertyChanged}"
                                            Increment="1"
                                            Minimum="0"
                                            Maximum="{Binding PreviewStyle.Value.AviUtlWindowWidth}"
                                            Width="56"
                                            Margin="4,0,0,0" />
                                        <Label
                                            Content="右:"
                                            Target="{Binding ElementName=Text_MarginRight}"
                                            Margin="8,0,0,0" />
                                        <tk:IntegerUpDown
                                            x:Name="Text_MarginRight"
                                            Value="{Binding
                                                Path=PreviewStyle.Value.AviUtlRightMargin,
                                                UpdateSourceTrigger=PropertyChanged}"
                                            Increment="1"
                                            Minimum="0"
                                            Maximum="{Binding PreviewStyle.Value.AviUtlWindowWidth}"
                                            Width="56"
                                            Margin="4,0,0,0" />
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <!-- プレビューテキストのスタイル設定 -->
                            <Border
                                BorderBrush="Silver"
                                BorderThickness="1"
                                Margin="20,8,5,0"
                                Padding="8">
                                <StackPanel>
                                    <StackPanel>
                                        <v:PreviewMovableValueControl
                                            DataContext="{Binding PreviewScale}"
                                            Margin="0,0,0,0" />
                                        <v:PreviewMovableValueControl
                                            DataContext="{Binding PreviewFontSize}"
                                            Margin="0,4,0,0" />
                                    </StackPanel>
                                    <Grid Margin="0,10,0,0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="4"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="4"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="5"/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Label
                                            Grid.Row="0" Grid.Column="0"
                                            Content="フォント："/>
                                        <ComboBox
                                            Grid.Row="0" Grid.Column="2"
                                            x:Name="Text_FontFamilyName"
                                            ItemsSource="{Binding FontFamilyNames}"
                                            SelectedItem="{Binding PreviewFontFamilyName.Value}"
                                            MinWidth="130"/>
                                        <tk:DropDownButton
                                            Grid.Row="0" Grid.Column="3"
                                            Padding="6,3"
                                            Margin="4,0,0,0"
                                            Width="100">
                                            <tk:DropDownButton.DropDownContent>
                                                <tk:ColorCanvas
                                                    SelectedColor="{Binding PreviewText.Value.FontColor}"
                                                    UsingAlphaChannel="False" />
                                            </tk:DropDownButton.DropDownContent>
                                            <StackPanel Orientation="Horizontal">
                                                <Rectangle
                                                    Stroke="Gray"
                                                    Width="16"
                                                    RadiusX="4" RadiusY="4">
                                                    <Rectangle.Fill>
                                                        <SolidColorBrush
                                                            Color="{Binding PreviewText.Value.FontColor}" />
                                                    </Rectangle.Fill>
                                                </Rectangle>
                                                <AccessText Text="文字色(_C)" Margin="4,0,0,0" />
                                            </StackPanel>
                                        </tk:DropDownButton>

                                        <Label
                                            Grid.Row="2" Grid.Column="0"
                                            Content="配置："
                                            Target="{Binding ElementName=Text_TextAlignment}"/>
                                        <ComboBox
                                            Grid.Row="2" Grid.Column="2"
                                            HorizontalAlignment="Left"
                                            x:Name="Text_TextAlignment"
                                            ItemsSource="{Binding Source={trt:PreviewEnumList {x:Type trt:PreviewTextAlignment}}}"
                                            SelectedItem="{Binding PreviewText.Value.TextAlignment}"
                                            Width="104">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock
                                                        Text="{Binding
                                                            Converter={StaticResource
                                                            ResourceKey=enumDisplayConverter}}" />
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>

                                        <Label
                                            Grid.Row="4" Grid.Column="0"
                                            Content="字間："
                                            Target="{Binding ElementName=Text_LetterSpace}"/>
                                        <tk:IntegerUpDown
                                            Grid.Row="4" Grid.Column="2"
                                            HorizontalAlignment="Left"
                                            x:Name="Text_LetterSpace"
                                            Value="{Binding
                                                Path=PreviewText.Value.LetterSpace,
                                                UpdateSourceTrigger=PropertyChanged}"
                                            Minimum="-100"
                                            Maximum="100"
                                            Width="56"/>
                                    </Grid>
                                </StackPanel>
                            </Border>
                        </StackPanel>
                        <!-- /TRT's拡張 -->
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
        <TabItem
            Style="{StaticResource modernTabItem}"
            Background="{StaticResource modernTabItemBackgroundMaki}">
            <TabItem.Header>
                <StackPanel Orientation="Horizontal">
                    <Image Source="/VoiceroidUtil;component/resources/icon/ymm.png" />
                    <AccessText Text="YMM3(_Y)" Margin="2,0,0,0" />
                </StackPanel>
            </TabItem.Header>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel
                    Orientation="Vertical"
                    IsEnabled="{Binding CanModify.Value, Mode=OneWay}"
                    Margin="6">
                    <Label>
                        <TextBlock>
                            <Run Text="ゆっくりMovieMaker3" FontWeight="Bold" />
                            との連携機能を設定します。
                        </TextBlock>
                    </Label>
                    <CheckBox
                        Content="音声保存時、タイムラインにファイルパス設定(_S)"
                        IsChecked="{Binding Config.Value.IsSavedFileToYmm}"
                        Margin="0,6,0,0" />
                    <Label
                        Content="※カスタムボイス機能は働きません。"
                        FontSize="11"
                        Margin="20,0,0,0" />
                    <StackPanel
                        IsEnabled="{Binding Config.Value.IsSavedFileToYmm, Mode=OneWay}"
                        Margin="20,4,0,0">
                        <CheckBox
                            Content="キャラクターを自動選択(_N)"
                            IsChecked="{Binding Config.Value.IsYmmCharaSelecting}" />
                        <StackPanel
                            Orientation="Vertical"
                            IsEnabled="{Binding
                                Path=Config.Value.IsYmmCharaSelecting,
                                Mode=OneWay}"
                            Margin="24,2,0,0">
                            <v:YmmCharaRelationsControl
                                DataContext="{Binding VisibleYmmCharaRelations.Value}" />
                            <Expander
                                Header="VOICEROID2/ガイノイドTalk/A.I.VOICEについて"
                                IsExpanded="False"
                                Margin="0,2,0,0">
                                <Border Style="{StaticResource solidBorder}" Padding="4">
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock TextWrapping="Wrap">
                                            VOICEROID2/ガイノイドTalk/A.I.VOICE側で使用したボイスプリセット名に特定キーワードが含まれている場合、そのVOICEROIDの自動選択設定を利用します。
                                        </TextBlock>
                                        <v:VoiceroidKeywordsView Margin="8,4,0,4" />
                                        <TextBlock TextWrapping="Wrap">
                                            いずれのキーワードも含まれていない場合、ボイスプリセット名自体をキャラクター名として利用します。<LineBreak />
                                            ゆっくりMovieMaker3にキャラクター名が登録されていない場合は何も行いません。
                                        </TextBlock>
                                    </StackPanel>
                                </Border>
                            </Expander>
                        </StackPanel>
                        <CheckBox
                            Content="追加ボタンを自動クリック(_B)"
                            IsChecked="{Binding Config.Value.IsYmmAddButtonClicking}"
                            Margin="0,4,0,0" />
                    </StackPanel>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
        <TabItem
            Style="{StaticResource modernTabItem}"
            Background="{StaticResource modernTabItemBackgroundMaki}">
            <TabItem.Header>
                <StackPanel Orientation="Horizontal">
                    <Image Source="/VoiceroidUtil;component/resources/icon/exo.png" />
                    <AccessText Text="AviUtl(_U)" Margin="2,0,0,0" />
                </StackPanel>
            </TabItem.Header>
            <ScrollViewer VerticalScrollBarVisibility="Auto">
                <StackPanel
                    Orientation="Vertical"
                    IsEnabled="{Binding CanModify.Value, Mode=OneWay}"
                    Margin="6">
                    <Label>
                        <TextBlock>
                            <Run Text="AviUtl拡張編集" FontWeight="Bold" />
                            との連携機能を設定します。<LineBreak />
                            連携には
                            <Run Text="ごちゃまぜドロップス v0.3 以降" FontWeight="Bold" />
                            の導入が必要です。
                        </TextBlock>
                    </Label>
                    <DockPanel Margin="0,6,0,0">
                        <StackPanel
                            Orientation="Vertical"
                            Visibility="{Binding
                                Path=IsExoFileMakingCommandVisible.Value,
                                Converter={StaticResource boolVisibilityConverter}}">
                            <Label
                                Content=".exo ファイル作成設定を有効にする必要があります。"
                                Foreground="Red"
                                Margin="0,0,0,4" />
                            <Button
                                Content="有効にする(_E)"
                                Command="{Binding ExoFileMakingCommand}" />
                        </StackPanel>
                        <StackPanel
                            Orientation="Vertical"
                            Visibility="{Binding
                                Path=IsExoFileMakingCommandInvisible.Value,
                                Converter={StaticResource boolVisibilityConverter}}">
                            <CheckBox
                                Content="AviUtl拡張編集ファイル(.exo)作成時、タイムラインにドロップ(_D)"
                                IsChecked="{Binding Config.Value.IsSavedExoFileToAviUtl}" />
                            <StackPanel
                                IsEnabled="{Binding
                                    Path=Config.Value.IsSavedExoFileToAviUtl,
                                    Mode=OneWay}"
                                Margin="20,4,0,0">
                                <CheckBox
                                    Content="ファイル作成時に拡張編集プロジェクトの情報を使う(_S)"
                                    IsChecked="{Binding
                                        Path=Config.Value.IsExoFileParamReplacedByAviUtl}" />
                                <Label
                                    Content="※プロジェクトの画像サイズ、フレームレート、音声レートを使います。"
                                    FontSize="11"
                                    Margin="20,0,0,0" />
                                <Label
                                    Content="ドロップ先レイヤー番号設定:"
                                    Margin="0,4,0,0" />
                                <StackPanel Orientation="Vertical" Margin="12,2,0,0">
                                    <v:AviUtlDropLayersControl
                                        DataContext="{Binding
                                            Path=VisibleAviUtlDropLayers.Value}" />
                                    <Expander
                                        Header="VOICEROID2/ガイノイドTalk/A.I.VOICEについて"
                                        IsExpanded="False"
                                        Margin="0,2,0,0">
                                        <Border
                                            Style="{StaticResource solidBorder}"
                                            Padding="4">
                                            <StackPanel Orientation="Vertical">
                                                <TextBlock TextWrapping="Wrap">
                                                    VOICEROID2/ガイノイドTalk/A.I.VOICE側で使用したボイスプリセット名に特定キーワードが含まれている場合、そのVOICEROIDのレイヤー番号設定を利用します。
                                                </TextBlock>
                                                <v:VoiceroidKeywordsView Margin="8,4,0,4" />
                                                <TextBlock TextWrapping="Wrap">
                                                    いずれのキーワードも含まれていない場合のみ、
                                                    <Run Text="VOICEROID2" FontWeight="Bold" />
                                                    /
                                                    <Run Text="ガイノイドTalk" FontWeight="Bold" />
                                                    /
                                                    <Run Text="A.I.VOICE" FontWeight="Bold" />
                                                    の設定を利用します。
                                                </TextBlock>
                                            </StackPanel>
                                        </Border>
                                    </Expander>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </DockPanel>
                </StackPanel>
            </ScrollViewer>
        </TabItem>
    </TabControl>
</UserControl>
